{"version":3,"file":"main.69fb45de1f06dec81836.bundle.js","sources":["webpack:///./src/hoc.optionState.js"],"sourcesContent":["import React from 'react'\r\nimport type { ComponentType } from 'react'\r\n\r\ntype Item = any\r\n\r\ntype State = {\r\n  opened: boolean,\r\n  indexHighlighted: number,\r\n}\r\n\r\ntype Props = {\r\n  onChange?: Item => void,\r\n  onOpen?: Item => void,\r\n  onClose?: Item => void,\r\n  options: Item[],\r\n}\r\n\r\nexport const injectOptionState = (C: ComponentType<*>) =>\r\n  class OptionListState extends React.Component<*, State> {\r\n    state: State = { opened: false, indexHighlighted: 0 }\r\n\r\n    open = () => {\r\n      if (this.props.onOpen) this.props.onOpen()\r\n      this.setState({ opened: true, indexHighlighted: 0 })\r\n    }\r\n    close = () => {\r\n      if (this.props.onClose) this.props.onClose()\r\n      this.setState({ opened: false, indexHighlighted: -1 })\r\n    }\r\n\r\n    onOptionHover = (indexHighlighted: number) =>\r\n      this.setState({ indexHighlighted })\r\n\r\n    onChange = (value: Item) => {\r\n      if (this.props.onChange) this.props.onChange(value)\r\n      this.close()\r\n    }\r\n\r\n    onKeyDown = (e: KeyboardEvent) => {\r\n      const n = this.props.options.length\r\n\r\n      switch (e.which) {\r\n        // <arrow up>\r\n        case 38: {\r\n          const indexHighlighted =\r\n            (n + Math.max(0, this.state.indexHighlighted) - 1) % n\r\n\r\n          return this.setState({\r\n            indexHighlighted,\r\n            opened: true,\r\n          })\r\n        }\r\n\r\n        // <arrow down>\r\n        case 40: {\r\n          const indexHighlighted = (this.state.indexHighlighted + 1) % n\r\n\r\n          return this.setState({\r\n            indexHighlighted,\r\n            opened: true,\r\n          })\r\n        }\r\n\r\n        // <enter>\r\n        case 9:\r\n        // <tab>\r\n        case 13: {\r\n          const value = this.props.options[this.state.indexHighlighted]\r\n          return value && this.onChange(value)\r\n        }\r\n      }\r\n\r\n      if (!this.state.opened)\r\n        this.setState({ opened: true, indexHighlighted: 0 })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Props) {\r\n      if (\r\n        nextProps.options.length <= this.state.indexHighlighted &&\r\n        this.state.opened\r\n      )\r\n        this.setState({ indexHighlighted: nextProps.options.length - 1 })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <C\r\n          {...this.props}\r\n          {...this.state}\r\n          open={this.open}\r\n          close={this.close}\r\n          onChange={this.onChange}\r\n          onOptionHover={this.onOptionHover}\r\n          onKeyDown={this.onKeyDown}\r\n        />\r\n      )\r\n    }\r\n  }\r\n"],"mappings":"AAiBA","sourceRoot":""}